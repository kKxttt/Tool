repeat wait() until game:IsLoaded() and game.Players.LocalPlayer
wait(10)
function FPSBooster()
    local decalsyeeted = true
    local g = game
    local w = g.Workspace
    local l = g.Lighting
    local t = w.Terrain
    sethiddenproperty(l,"Technology",2)
    sethiddenproperty(t,"Decoration",false)
    t.WaterWaveSize = 0
    t.WaterWaveSpeed = 0
    t.WaterReflectance = 0
    t.WaterTransparency = 0
    l.GlobalShadows = false
    l.FogEnd = 9e9
    l.Brightness = 0
    settings().Rendering.QualityLevel = "Level01"
    for i, v in pairs(g:GetDescendants()) do
        if v:IsA("Part") or v:IsA("Union") or v:IsA("CornerWedgePart") or v:IsA("TrussPart") then
            v.Material = "Plastic"
            v.Reflectance = 0
        elseif v:IsA("Decal") or v:IsA("Texture") and decalsyeeted then
            v.Transparency = 1
        elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
            v.Lifetime = NumberRange.new(0)
        elseif v:IsA("Explosion") then
            v.BlastPressure = 1
            v.BlastRadius = 1
        elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or v:IsA("Sparkles") then
            v.Enabled = false
        elseif v:IsA("MeshPart") then
            v.Material = "Plastic"
            v.Reflectance = 0
            v.TextureID = 10385902758728957
        end
    end
    for i, e in pairs(l:GetChildren()) do
        if e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or e:IsA("ColorCorrectionEffect") or e:IsA("BloomEffect") or e:IsA("DepthOfFieldEffect") then
            e.Enabled = false
        end
    end
end

FPSBooster()
while wait(120) do
    
    local plr = game.Players.LocalPlayer
    local backpack = plr.Backpack:GetChildren()
    
    local auto_buy = false
    for _, v in pairs(backpack) do
        tooltip = v.ToolTip
        if tooltip == 'Blox Fruit' then
            auto_buy = true
            print('âœ…')
            break
        end
    end
    
    local check_buy = false
    
    if auto_buy == false then
    
        local fruit_list = {'Flame-Flame', 'Ice-Ice', 'Sand-Sand', 'Light-Light', 'Dark-Drak'}
        local random_fruis = fruit_list[math.random(1, #fruit_list)]
        check_buy = true
    
        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer("PurchaseRawFruit", random_fruis, false)
    end
    
    local check_race = false
    local data_race = plr.Data.Race.Value
    if data_race == 'Skypiea' or data_race == 'Fishman' then
        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer('BlackbeardReward', 'Reroll', '2')
        check_race = true
    end
    
    local https = game:GetService('HttpService')
    local request = http_request or request or HttpPost or syn.request
    local plr = game.Players.LocalPlayer
    local data_race = plr.Data.Race.Value
    local fruit = plr.Backpack:GetChildren()
    local money = plr.Data.Beli.Value
    local fragment = plr.Data.Fragments.Value
    local url1 = 'https://discord.com/api/webhooks/1421829907381616640/GFdCWFOEslilwroWfO5oQQLovbb_Fk87pC8FCRE7VJUJadvOQfyq5oUT-e-O2uO3MCrn'
    local url2 = 'https://discord.com/api/webhooks/1423656219096256542/WCorOwFI9dWighUMeTyeMgJeNOgaFB2lwdNVtcG_CO2hzXDBJeKnTH0Aspjg2YgM9btJ'
    local check_it = 'https://discord.com/api/webhooks/1423675469802377347/8jkzF5kEA3YS-oohPEZbi0yTqzBhhqFX6uiTP9GVo9zaIphi3bif0mS-LbG3XkVA56ez'
    
    local now = os.time()
    local thai = now + (7 * 60 * 60)
    
    local text = os.date("!%H:%M:%S", thai)
    
    local name_fruit = ''
    
    for _, v in pairs(fruit) do
        local tooltip = v.ToolTip
        if tooltip == 'Blox Fruit' then
            name_fruit = v.Name
        end
    end    

    function check_item()
        local items = game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer('getInventory')
        print('----------')

        local need_items = { 'Cursed Dual Katana', 'Mirror Fractal', 'Valkyrie Helm' }
        found = {}

        for i, v in pairs(items) do
            if typeof(v) == "table" then
                local item_name = v.Name
                local count = v.Count

                for _, check in pairs(need_items) do
                    if item_name == check then
                        table.insert(found, item_name)
                    end
                end
            end
        end

        check_ready = {}
        check_non = {}

        if #found == #need_items then
            for _, v in pairs(found) do
                print("Item_name: " .. v)
                table.insert(check_ready, v)
            end
        else
            for _, v in pairs(found) do
                print("Item_name: " .. v)
                table.insert(check_ready, v)
            end
        end
    end

    check_item()
    
    function requests_web(url)
        
        item_list = ""
        for _, v in pairs(check_ready) do
            item_list = item_list .. "- " .. tostring(v) .. "\n"
        end
        if item_list == "" then
            item_list = "None"
        end

        local info = request({
            Url = url,
            Method = 'POST',
            Headers = {
                ['Content-Type'] = 'application/json'
            },
            Body = https:JSONEncode({
                ['embeds'] = {{
                    ['title'] = plr.Name,
                    ['description'] = '',
                    ['type'] = 'rich',
                    ['color'] = tonumber(0x3399ff),
                    ['footer'] = {
                        ['text'] = 'Blox fuits / Webhook '..text
                    },
                    ['fields'] = {
                        {
                            ['name'] = 'Race: '.. '`' ..data_race.. '`',
                            ['value'] = '',
                            ['inline'] = false
                        },
                        {
                            ['name'] = 'Fruit: '.. '`' ..tostring(name_fruit)..'`',
                            ['value'] = '',
                            ['inline'] = false
                        },
                        {
                            ['name'] = 'Money: '.. '`' ..tostring(money):reverse():gsub("(%d%d%d)", "%1,"):reverse():gsub("^,", "")..'`',
                            ['value'] = '',
                            ['inline'] = false
                        },
                        {
                            ['name'] = 'Fragment: '..'`'.. tostring(fragment):reverse():gsub("(%d%d%d)", "%1,"):reverse():gsub("^,", "")..'`',
                            ['value'] = '',
                            ['inline'] = false
                        },
                        {
                            ['name'] = 'LOG AUTO BUY FRUIT AND RACE',
                            ['value'] = '',
                            ['inline'] = false
                        },
                        {
                            ['name'] = '',
                            ['value'] = 'Auto-buy -> '.. '`'..tostring(check_buy)..'`',
                            ['inline'] = false
                        },
                        {
                            ['name'] = '',
                            ['value'] = 'Check-race -> ' .. '`'..tostring(check_race)..'`',
                            ['inline'] = false
                        },
                        {
                            ['name'] = 'Item',
                            ['value'] = item_list,
                            ['inline'] = false
                        }
                    },
                    ['thumbnail'] = {
                        ['url'] = "https://i.pinimg.com/originals/80/17/a7/8017a7acf5d9cf3d82e8278c6f556415.gif" 
                    }
                }}
            })
        })
    end

    if fragment >= 50000 then
        requests_web(url1)
    else
        requests_web(url2)
    end

    if #found <= 2 then
        requests_web(check_it)
    end
end

